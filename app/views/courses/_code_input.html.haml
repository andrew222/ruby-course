.code_input
	= text_area :code, :text

:javascript
	$(document).ready(function(){
		var myCodeMirror = CodeMirror.fromTextArea(document.getElementById('code_text'), {
			mode: "text/x-ruby",
			theme: "rubyblue",
			tabMode: "indent",
			lineNumbers: true,
			matchBrackets: true,
			autofocus: true,
			onKeyEvent: function(editor, event){
		    var event_type = event.type;
		    if(event_type == "keydown"){
		    	if(event.keyCode == 13){
		    		send_request_after_press_enter_key(editor);
		    	}
		    }
			},
			extraKeys: {
				Up: function(cm){
					// TODO display previous input history
					alert('up-arrow pressed')
				},
				Down: function(cm){
					// TODO display next input history
				},
				"Alt-L": function(cm){
					clear_text_area(cm);
				},
				"Ctrl-Z": function(cm){
					cm.doc.undo()
				},
				"Ctrl-Shift-Z": function(cm){
					cm.doc.redo()
				}
			},
			indentUnit: 4
		});
		var send_request_after_press_enter_key = function(editor){
			var me = editor,
					last_line = me.lastLine() + 1,
					last_line_code;
			last_line_code = me.getLine(last_line - 1);
			if(last_line_code == 'clear'){
				clear_text_area(me);
			}else{
				$.ajax({
					type: "POST",
		      url: "/excute_code.json",
		      data: { code: me.doc.getValue() },
		      dataType: "json",
		      beforeSend: function(){
		      	console.log("before send data");
		      },
		      success: function(data) {
		        me.setLine(last_line, data.result.toString() + "\n")
		      },
					error: function(error){
						console.log(error);
					}
				})
			}
		}

		var previous_line_code = function(line_numb){

		}
	});